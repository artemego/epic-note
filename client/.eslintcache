[{"C:\\Users\\user\\dev\\epic-note\\client\\src\\context\\AppProviders.js":"1","C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\login\\LoginPage.jsx":"2","C:\\Users\\user\\dev\\epic-note\\client\\src\\App.js":"3","C:\\Users\\user\\dev\\epic-note\\client\\src\\PrivateApp.js":"4","C:\\Users\\user\\dev\\epic-note\\client\\src\\schemas\\userSchema.js":"5","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\selectMenu\\SelectMenu.jsx":"6","C:\\Users\\user\\dev\\epic-note\\client\\src\\PublicApp.js":"7","C:\\Users\\user\\dev\\epic-note\\client\\src\\context\\AuthContext.js":"8","C:\\Users\\user\\dev\\epic-note\\client\\src\\reportWebVitals.js":"9","C:\\Users\\user\\dev\\epic-note\\client\\src\\api\\notesApi.js":"10","C:\\Users\\user\\dev\\epic-note\\client\\src\\helpers\\getCaretCoordinates.js":"11","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\editableBlock\\EditableBlock.jsx":"12","C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\blockEditor\\BlockEditor.jsx":"13","C:\\Users\\user\\dev\\epic-note\\client\\src\\helpers\\setCaretToEnd.js":"14","C:\\Users\\user\\dev\\epic-note\\client\\src\\routes\\privateRoutes.js":"15","C:\\Users\\user\\dev\\epic-note\\client\\src\\index.js":"16","C:\\Users\\user\\dev\\epic-note\\client\\src\\hooks\\useComponentDidUpdate.js":"17","C:\\Users\\user\\dev\\epic-note\\client\\src\\context\\actions.js":"18","C:\\Users\\user\\dev\\epic-note\\client\\src\\routes\\publicRoutes.js":"19","C:\\Users\\user\\dev\\epic-note\\client\\src\\api\\authApi.js":"20","C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\register\\RegisterPage.jsx":"21","C:\\Users\\user\\dev\\epic-note\\client\\src\\helpers\\objectId.js":"22","C:\\Users\\user\\dev\\epic-note\\client\\src\\hooks\\usePrevious.js":"23","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\actionMenu\\ActionMenu.jsx":"24","C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\Notes.jsx":"25","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\toolBlocks\\TodoList.jsx":"26","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\toolBlocks\\ToggleList.jsx":"27","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\sideBar\\SideBar.jsx":"28","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\sideBar\\FolderTree.jsx":"29","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\sideBar\\AddPageModal.jsx":"30","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\sideBar\\PageItem.jsx":"31","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\toolBlocks\\ButtonBlock.jsx":"32","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\common\\CustomLink.jsx":"33","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\common\\Splash.jsx":"34","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\common\\Placeholder.jsx":"35","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\auth\\LoginForm.jsx":"36","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\auth\\RegisterForm.jsx":"37","C:\\Users\\user\\dev\\epic-note\\client\\src\\api\\userApi.js":"38"},{"size":237,"mtime":1634563914677,"results":"39","hashOfConfig":"40"},{"size":577,"mtime":1636736358333,"results":"41","hashOfConfig":"40"},{"size":2030,"mtime":1637153064974,"results":"42","hashOfConfig":"40"},{"size":259,"mtime":1636720577164,"results":"43","hashOfConfig":"40"},{"size":263,"mtime":1634563914701,"results":"44","hashOfConfig":"40"},{"size":4043,"mtime":1636720750046,"results":"45","hashOfConfig":"40"},{"size":694,"mtime":1635521090643,"results":"46","hashOfConfig":"40"},{"size":3665,"mtime":1636737937452,"results":"47","hashOfConfig":"40"},{"size":362,"mtime":1634563914696,"results":"48","hashOfConfig":"40"},{"size":1962,"mtime":1636720612625,"results":"49","hashOfConfig":"40"},{"size":533,"mtime":1635775629906,"results":"50","hashOfConfig":"40"},{"size":18736,"mtime":1636720742470,"results":"51","hashOfConfig":"40"},{"size":8072,"mtime":1636735534596,"results":"52","hashOfConfig":"40"},{"size":271,"mtime":1634563914685,"results":"53","hashOfConfig":"40"},{"size":522,"mtime":1636732573740,"results":"54","hashOfConfig":"40"},{"size":381,"mtime":1635086836871,"results":"55","hashOfConfig":"40"},{"size":287,"mtime":1634563914687,"results":"56","hashOfConfig":"40"},{"size":810,"mtime":1635786859560,"results":"57","hashOfConfig":"40"},{"size":963,"mtime":1636732400859,"results":"58","hashOfConfig":"40"},{"size":2425,"mtime":1636735475577,"results":"59","hashOfConfig":"40"},{"size":1338,"mtime":1636736285673,"results":"60","hashOfConfig":"40"},{"size":302,"mtime":1634563914683,"results":"61","hashOfConfig":"40"},{"size":206,"mtime":1634569235711,"results":"62","hashOfConfig":"40"},{"size":979,"mtime":1636720625129,"results":"63","hashOfConfig":"40"},{"size":1825,"mtime":1637153144893,"results":"64","hashOfConfig":"40"},{"size":3020,"mtime":1635696577034,"results":"65","hashOfConfig":"40"},{"size":1705,"mtime":1636733845274,"results":"66","hashOfConfig":"40"},{"size":6256,"mtime":1636734590627,"results":"67","hashOfConfig":"40"},{"size":4662,"mtime":1636720771405,"results":"68","hashOfConfig":"40"},{"size":2277,"mtime":1635520712265,"results":"69","hashOfConfig":"40"},{"size":2122,"mtime":1635794402550,"results":"70","hashOfConfig":"40"},{"size":397,"mtime":1635520823202,"results":"71","hashOfConfig":"40"},{"size":315,"mtime":1636737048839,"results":"72","hashOfConfig":"40"},{"size":480,"mtime":1637152310361,"results":"73","hashOfConfig":"40"},{"size":542,"mtime":1635520948568,"results":"74","hashOfConfig":"40"},{"size":3714,"mtime":1637079055449,"results":"75","hashOfConfig":"40"},{"size":4619,"mtime":1636738277670,"results":"76","hashOfConfig":"40"},{"size":996,"mtime":1636720620355,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1hr0hu3",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\user\\dev\\epic-note\\client\\src\\context\\AppProviders.js",[],["162","163"],"C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\login\\LoginPage.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\App.js",["164"],"C:\\Users\\user\\dev\\epic-note\\client\\src\\PrivateApp.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\schemas\\userSchema.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\selectMenu\\SelectMenu.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\PublicApp.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\api\\notesApi.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\helpers\\getCaretCoordinates.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\editableBlock\\EditableBlock.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\blockEditor\\BlockEditor.jsx",["165","166"],"import React, { useEffect, useState } from \"react\";\r\n// @ts-ignore\r\nimport styles from \"./blockEditor.module.scss\";\r\nimport EditableBlock from \"../../components/editableBlock/EditableBlock\";\r\nimport { setCaretToEnd } from \"../../helpers/setCaretToEnd\";\r\nimport usePrevious from \"../../hooks/usePrevious\";\r\nimport * as notesApi from \"../../api/notesApi\";\r\nimport objectId from \"../../helpers/objectId\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { useCallback } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport debounce from \"lodash.debounce\";\r\nimport Splash from \"../../components/common/Splash\";\r\n\r\nconst BlockEditor = ({ pageId, accessToken, fetchedBlocks, isPageLoading }) => {\r\n  const [blocks, setBlocks] = useState(fetchedBlocks);\r\n  const [currentBlockId, setCurrentBlockId] = useState(null);\r\n  const prevBlocks = usePrevious(blocks);\r\n  // используется, чтобы предотвратить отправку новых блоков на сервер, когда мы меняем страницу.\r\n  // ресетается обратно на true, когда сменяется страница (приходят новые fetchedBlocks)\r\n  // присваивается значение false, когда происходит какое-то действие с блоками\r\n  const isFirstRenderWithPage = useRef(true);\r\n\r\n  useEffect(() => {\r\n    setBlocks(fetchedBlocks);\r\n    setCurrentBlockId(null);\r\n    isFirstRenderWithPage.current = true;\r\n  }, [fetchedBlocks]);\r\n\r\n  const updatePageOnServer = (blocks, pageId) => {\r\n    notesApi.updatePage(accessToken, pageId, blocks);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isFirstRenderWithPage.current && prevBlocks && prevBlocks !== blocks) {\r\n      updatePageOnServer({ blocks: blocks }, pageId);\r\n    }\r\n  }, [blocks, prevBlocks]);\r\n\r\n  // Handling the cursor and focus on adding and deleting blocks\r\n  useEffect(() => {\r\n    // If a new block was added, move the caret to it\r\n    if (prevBlocks && prevBlocks.length + 1 === blocks.length) {\r\n      const nextBlockPosition =\r\n        blocks.map((b) => b._id).indexOf(currentBlockId) + 1 + 1;\r\n      const nextBlock = document.querySelector(\r\n        `[data-position=\"${nextBlockPosition}\"]`\r\n      );\r\n      if (nextBlock) {\r\n        nextBlock.focus();\r\n      }\r\n    }\r\n    // If a block was deleted, move the caret to the end of the last block\r\n    if (prevBlocks && prevBlocks.length - 1 === blocks.length) {\r\n      const lastBlockPosition = prevBlocks\r\n        .map((b) => b._id)\r\n        .indexOf(currentBlockId);\r\n      const lastBlock = document.querySelector(\r\n        `[data-position=\"${lastBlockPosition}\"]`\r\n      );\r\n      if (lastBlock) {\r\n        setCaretToEnd(lastBlock);\r\n      }\r\n    }\r\n  }, [blocks, prevBlocks, currentBlockId]);\r\n\r\n  // Здесь мы обновляем общий стейт с блоками, а это в свою очередь триггерит useEffect на blocks и prevBlocks, в этом юз эффекте нам и нужно посылать запросы с обновлениями на сервер.\r\n  // здесь debounce нам позволит отложить update блоков на сервер до того момента, когда пользователь прекратил печатать\r\n\r\n  const updateBlockHandler = (currentBlock, localPageId) => {\r\n    isFirstRenderWithPage.current = false;\r\n    const index = blocks.map((b) => b._id).indexOf(currentBlock.id);\r\n    const updatedBlocks = [...blocks];\r\n\r\n    updatedBlocks[index] = {\r\n      ...updatedBlocks[index],\r\n      tag: currentBlock.tag,\r\n      html: currentBlock.html,\r\n      counter: currentBlock.counter,\r\n    };\r\n\r\n    // когда пользователь сменил страницу пока еще печатал\r\n    if (pageId !== localPageId) {\r\n      updatePageOnServer({ blocks: updatedBlocks }, pageId);\r\n      return;\r\n    }\r\n\r\n    // проверяем, не добавил ли пользователь блок пока печатал (и отменяем в этом случае setBlocks)\r\n    setBlocks((prevBlocks) => {\r\n      // ничего не менять, если есть разница в длине между блоками (потому что при добавлении или удалении срабатывает отдельный handler, в котором сетаются блоки)\r\n      if (prevBlocks.length !== updatedBlocks.length) return prevBlocks;\r\n      return updatedBlocks;\r\n    });\r\n  };\r\n\r\n  const debouncedUpdateBlockHandler = useCallback(\r\n    debounce(\r\n      (currentBlock, localPageId) =>\r\n        updateBlockHandler(currentBlock, localPageId),\r\n      1000\r\n    ),\r\n    [blocks]\r\n  );\r\n\r\n  const addBlockHandler = useCallback(\r\n    (currentBlock) => {\r\n      isFirstRenderWithPage.current = false;\r\n      setCurrentBlockId(currentBlock.id);\r\n      const index = blocks.map((b) => b._id).indexOf(currentBlock.id);\r\n      const updatedBlocks = [...blocks];\r\n      const newBlock = { _id: objectId(), tag: \"p\", html: \"\" };\r\n      updatedBlocks.splice(index + 1, 0, newBlock);\r\n      // это на тот случай, когда у нас еще не произошло обновление текущего блока через updateBlock (когда пользователь не закончил печатать и нажал enter)\r\n      updatedBlocks[index] = {\r\n        ...updatedBlocks[index],\r\n        tag: currentBlock.tag,\r\n        html: currentBlock.html,\r\n      };\r\n      setBlocks(updatedBlocks);\r\n    },\r\n    [blocks]\r\n  );\r\n\r\n  const deleteBlockHandler = useCallback(\r\n    (currentBlock) => {\r\n      isFirstRenderWithPage.current = false;\r\n      if (blocks.length > 1) {\r\n        setCurrentBlockId(currentBlock.id);\r\n        const index = blocks.map((b) => b._id).indexOf(currentBlock.id);\r\n        // const deletedBlock = blocks[index];\r\n        const updatedBlocks = [...blocks];\r\n        updatedBlocks.splice(index, 1);\r\n        setBlocks(updatedBlocks);\r\n      }\r\n    },\r\n    [blocks]\r\n  );\r\n\r\n  const onDragEndHandler = useCallback(\r\n    (result) => {\r\n      isFirstRenderWithPage.current = false;\r\n      const { destination, source } = result;\r\n\r\n      // If we don't have a destination (due to dropping outside the droppable)\r\n      // or the destination hasn't changed, we change nothing\r\n      if (!destination || destination.index === source.index) {\r\n        return;\r\n      }\r\n\r\n      const updatedBlocks = [...blocks];\r\n      const removedBlocks = updatedBlocks.splice(source.index - 1, 1);\r\n      updatedBlocks.splice(destination.index - 1, 0, removedBlocks[0]);\r\n      setBlocks(updatedBlocks);\r\n    },\r\n    [blocks]\r\n  );\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEndHandler}>\r\n      <div className={styles.editor}>\r\n        {!isPageLoading ? (\r\n          <Droppable droppableId={pageId}>\r\n            {(provided) => (\r\n              <div\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                className={styles.droppable}\r\n              >\r\n                {blocks.map((block) => {\r\n                  const position =\r\n                    blocks.map((b) => b._id).indexOf(block._id) + 1;\r\n                  return (\r\n                    <EditableBlock\r\n                      key={block._id}\r\n                      position={position}\r\n                      id={block._id}\r\n                      tag={block.tag}\r\n                      html={block.html}\r\n                      addBlock={addBlockHandler}\r\n                      deleteBlock={deleteBlockHandler}\r\n                      updatePage={debouncedUpdateBlockHandler}\r\n                      counter={block.counter}\r\n                      pageId={pageId}\r\n                    />\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        ) : (\r\n          <Splash />\r\n        )}\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default BlockEditor;\r\n","C:\\Users\\user\\dev\\epic-note\\client\\src\\helpers\\setCaretToEnd.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\routes\\privateRoutes.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\index.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\hooks\\useComponentDidUpdate.js",["167","168"],"import { useRef, useEffect } from \"react\";\n\nexport const useComponentDidUpdate = (effect, dependencies) => {\n  const hasMounted = useRef(false);\n\n  useEffect(() => {\n    if (!hasMounted.current) {\n      hasMounted.current = true;\n      return;\n    }\n    effect();\n  }, dependencies);\n};\n","C:\\Users\\user\\dev\\epic-note\\client\\src\\context\\actions.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\routes\\publicRoutes.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\api\\authApi.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\register\\RegisterPage.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\helpers\\objectId.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\hooks\\usePrevious.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\actionMenu\\ActionMenu.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\Notes.jsx",["169"],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\toolBlocks\\TodoList.jsx",["170","171"],"import { Checkbox } from \"@chakra-ui/checkbox\";\nimport { Flex, Stack } from \"@chakra-ui/layout\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRef } from \"react\";\n\nimport usePrevious from \"../../hooks/usePrevious\";\n\nfunction TodoList({ children, html, overrideHtml }) {\n  const isFirstRender = useRef(true);\n  const [liChecked, setLiChecked] = useState([]);\n  const liCount = isFirstRender\n    ? 0\n    : children.props.innerRef.current.childElementCount;\n  const prevLiCount = usePrevious(liCount);\n\n  useEffect(() => {\n    setLiChecked(getLiCheckedArrayFromHtml(html));\n  }, []);\n\n  // когда мы только переключаемся с закрытого тудулиста, innerRef у нас будет null\n  // поэтому на первом рендере мы будем делать вычисление liChecked с помощью html, а не из props.innerRef\n  useEffect(() => {\n    if (isFirstRender) {\n      const currentCount = children.props.innerRef.current.childElementCount;\n      if (prevLiCount !== currentCount) {\n        setLiChecked(getLiCheckedArray(html));\n      }\n    }\n    isFirstRender.current = false;\n  }, [html]);\n\n  const getLiCheckedArray = () => {\n    const liElemsArray = [...children.props.innerRef.current.children];\n    // проверяем их на <s> тэг\n    return liElemsArray.map((elem) => {\n      return /<s>/.test(elem.innerHTML) ? true : false;\n    });\n  };\n\n  const getLiCheckedArrayFromHtml = (html) => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, \"text/html\");\n    const liElems = doc.getElementsByTagName(\"li\");\n    const liElemsArray = [...liElems];\n    return liElemsArray.map((elem) => {\n      return /<s>/.test(elem.innerHTML) ? true : false;\n    });\n  };\n\n  const handleLiClick = (index) => {\n    // меняем значение элемента в массиве\n    const newArr = [...liChecked];\n    newArr[index] = !newArr[index];\n    setLiChecked(newArr);\n    changeHtml(index, newArr[index]);\n  };\n\n  const changeHtml = (index, completed) => {\n    const liArray = [...children.props.innerRef.current.children];\n\n    const changedHtmlNew = completed\n      ? `<s>${liArray[index].innerText}</s>`\n      : liArray[index].innerText;\n\n    liArray[index].innerHTML = changedHtmlNew;\n\n    const newLiArrayHtml = liArray.map((el) => el.outerHTML);\n    overrideHtml(newLiArrayHtml.join(\"\"));\n  };\n\n  return (\n    <Flex w=\"100%\" alignItems=\"center\">\n      <Stack\n        direction=\"column\"\n        m=\"0 5px\"\n        alignSelf=\"stretch\"\n        justifyContent=\"center\"\n      >\n        {liChecked.map((el, idx) => {\n          return (\n            <Checkbox\n              key={idx}\n              isChecked={el}\n              colorScheme=\"orange\"\n              onChange={() => {\n                handleLiClick(idx);\n              }}\n            />\n          );\n        })}\n      </Stack>\n      {children}\n    </Flex>\n  );\n}\n\nconst TodoListMemo = React.memo(TodoList);\nexport default TodoListMemo;\n","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\toolBlocks\\ToggleList.jsx",["172"],"import { IconButton } from \"@chakra-ui/button\";\nimport { ChevronDownIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { Box, Flex, Text } from \"@chakra-ui/layout\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nconst firstLiContent = /(?<=^<li>)(.*?)(?=<\\/li>)/;\nconst replaceRegexp = /&nbsp;|<br>/g;\n\nfunction ToggleList({ children, html }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const liTextRef = useRef(getFirstLiText());\n\n  useEffect(() => {\n    const newLiText = getFirstLiText();\n    liTextRef.current = newLiText;\n  }, []);\n\n  const handleToggleClick = () => {\n    liTextRef.current = getFirstLiText();\n    setIsOpen(!isOpen);\n  };\n\n  function getFirstLiText() {\n    const firstLiInner = html.match(firstLiContent);\n    const replaced = firstLiInner[0].replaceAll(replaceRegexp, \"\");\n    return replaced;\n  }\n\n  const firstItemText = liTextRef.current;\n\n  return (\n    <Box w=\"100%\">\n      <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n        <IconButton\n          colorScheme=\"orange\"\n          variant=\"outline\"\n          aria-label=\"Open list\"\n          size=\"xs\"\n          fontSize=\"17px\"\n          icon={isOpen ? <ChevronDownIcon /> : <ChevronRightIcon />}\n          onClick={handleToggleClick}\n          mr=\"5px\"\n        />\n        {!isOpen ? (\n          firstItemText ? (\n            <Text>{firstItemText}</Text>\n          ) : (\n            <Text opacity={0.6} fontStyle=\"italic\">\n              unnamed toggle list, open and edit first line to change title {}\n            </Text>\n          )\n        ) : null}\n      </Flex>\n      {isOpen && children}\n    </Box>\n  );\n}\n\nconst ToggleListMemo = React.memo(ToggleList);\nexport default ToggleListMemo;\n","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\sideBar\\SideBar.jsx",["173"],"import { Button } from \"@chakra-ui/button\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Heading,\r\n  Slide,\r\n  useDisclosure,\r\n  VStack,\r\n  Divider,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport * as notesApi from \"../../api/notesApi\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AddIcon, ArrowLeftIcon, ArrowRightIcon } from \"@chakra-ui/icons\";\r\nimport objectId from \"../../helpers/objectId\";\r\nimport FolderTree from \"./FolderTree\";\r\nimport AddPageModal from \"./AddPageModal\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport default function SideBar({ pageId }) {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [deletingId, setDeletingId] = useState(null);\r\n  const { isOpen, onToggle } = useDisclosure();\r\n  const { logout } = useAuth();\r\n  const { accessToken, email } = useAuth().state;\r\n  const history = useHistory();\r\n\r\n  // react-query\r\n  const { data, isLoading, refetch } = useQuery(\"pages\", async () => {\r\n    return await notesApi.getPages(accessToken);\r\n  });\r\n\r\n  const btnRef = React.useRef();\r\n  const position = isOpen ? \"sticky\" : \"fixed\";\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n  };\r\n\r\n  const handlePageClick = useCallback(\r\n    (pageId) => {\r\n      history.push(`/${pageId}`);\r\n    },\r\n    [history]\r\n  );\r\n\r\n  const handleModalClose = useCallback(() => {\r\n    setIsModalOpen(false);\r\n  }, []);\r\n\r\n  const handleModalOpen = useCallback(() => {\r\n    setIsModalOpen(true);\r\n  }, []);\r\n\r\n  const handleModalSaveClick = useCallback(\r\n    async ({ pageTitle }) => {\r\n      // add page запрос на сервер\r\n      setIsFetching(true);\r\n      const initialBlock = { _id: objectId(), tag: \"p\", html: \"\" };\r\n      await notesApi.addPage(accessToken, pageTitle, initialBlock);\r\n      setIsFetching(false);\r\n      setIsModalOpen(false);\r\n      refetch();\r\n    },\r\n    [accessToken, refetch]\r\n  );\r\n\r\n  const handlePageDelete = useCallback(\r\n    async (pageId) => {\r\n      // delete page запрос на сервер\r\n      setIsDeleting(true);\r\n      setDeletingId(pageId);\r\n      // console.log(\"handlePageDelete, id: \" + pageId);\r\n      await notesApi.deletePage(accessToken, pageId);\r\n      setIsDeleting(false);\r\n      setDeletingId(null);\r\n      refetch();\r\n      // перенаправляем пользователя на placeholder страницу, если удаляется выбранная страница\r\n      if (history.location.pathname === `/${pageId}`) history.push(`/`);\r\n    },\r\n    [accessToken, refetch]\r\n  );\r\n\r\n  // здесь мы просто наверное будем отсылать запрос на обновление страниц, на клиенте обновление уже произойдет в дереве, хотя хз\r\n  const handleUpdatePages = useCallback(\r\n    async (newTree) => {\r\n      notesApi.updatePages(accessToken, newTree);\r\n    },\r\n    [accessToken]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: \"fixed\", left: \"5px\", top: \"5px\", zIndex: 100 }}>\r\n        <Button ref={btnRef} colorScheme=\"orange\" onClick={onToggle}>\r\n          Pages <ArrowRightIcon ml=\"10px\" />\r\n        </Button>\r\n      </div>\r\n      <Slide\r\n        direction=\"left\"\r\n        in={isOpen}\r\n        style={{\r\n          height: \"100vh\",\r\n          width: \"300px\",\r\n          zIndex: 100,\r\n          position: position,\r\n        }}\r\n      >\r\n        <VStack\r\n          color=\"black\"\r\n          bg=\"#F7F6F3\"\r\n          rounded=\"md\"\r\n          h=\"100vh\"\r\n          w=\"300px\"\r\n          overflowY=\"scroll\"\r\n          overflowX=\"hidden\"\r\n        >\r\n          <Box p={2.5} mr=\"5px\" ml=\"5px\" w=\"100%\" position=\"relative\">\r\n            <Flex justifyContent=\"space-between\" mb=\"10px\">\r\n              <Heading fontSize={28}>User Pages </Heading>\r\n              <Button\r\n                aria-label=\"Close Control Panel\"\r\n                onClick={handleLogout}\r\n                colorScheme=\"orange\"\r\n              >\r\n                Logout\r\n              </Button>\r\n              <Button\r\n                aria-label=\"Close Control Panel\"\r\n                onClick={onToggle}\r\n                colorScheme=\"orange\"\r\n                ml=\"5px\"\r\n              >\r\n                Close\r\n                <ArrowLeftIcon ml=\"10px\" />\r\n              </Button>\r\n            </Flex>\r\n            <Divider orientation=\"horizontal\" />\r\n            <Box p=\"5px 0px\" fontWeight=\"500\" color=\"gray.600\">\r\n              Logged in as {email}\r\n            </Box>\r\n            <Divider orientation=\"horizontal\" />\r\n          </Box>\r\n          {isLoading ? (\r\n            <Spinner />\r\n          ) : !data.pages.rootIds.length ? (\r\n            <Box p=\"10px\" height=\"100%\" textAlign=\"center\" color=\"gray.600\">\r\n              You have no pages, click <b>new page</b> button to create a new\r\n              page\r\n            </Box>\r\n          ) : (\r\n            <FolderTree\r\n              handlePageClick={handlePageClick}\r\n              handlePageDelete={handlePageDelete}\r\n              pageId={pageId}\r\n              isDeleting={isDeleting}\r\n              deletingId={deletingId}\r\n              handleUpdatePages={handleUpdatePages}\r\n              pagesData={data.pages}\r\n            />\r\n          )}\r\n          <AddPageModal\r\n            isOpen={isModalOpen}\r\n            onClose={handleModalClose}\r\n            onSave={handleModalSaveClick}\r\n            isLoading={isFetching}\r\n          />\r\n\r\n          <Box\r\n            onClick={handleModalOpen}\r\n            p={2}\r\n            borderWidth=\"1px\"\r\n            m=\"5px\"\r\n            w=\"100%\"\r\n            _hover={{ bg: \"#E8E6E1\", cursor: \"pointer\" }}\r\n            style={{ transition: \".2s ease-in-out\" }}\r\n            position=\"fixed\"\r\n            bottom=\"0px\"\r\n            left=\"0px\"\r\n            h=\"65px\"\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n          >\r\n            <AddIcon />\r\n            <Heading fontSize=\"xl\" ml=\"15px\" overflow=\"hidden\">\r\n              New page\r\n            </Heading>\r\n          </Box>\r\n        </VStack>\r\n      </Slide>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\sideBar\\FolderTree.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\sideBar\\AddPageModal.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\sideBar\\PageItem.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\toolBlocks\\ButtonBlock.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\common\\CustomLink.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\common\\Splash.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\common\\Placeholder.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\auth\\LoginForm.jsx",["174"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport userSchema from \"../../schemas/userSchema\";\r\n\r\nimport {\r\n  Stack,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  FormHelperText,\r\n  FormErrorMessage,\r\n  IconButton,\r\n} from \"@chakra-ui/react\";\r\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\nexport default function LoginForm() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(userSchema),\r\n  });\r\n\r\n  const { login, setError } = useAuth();\r\n\r\n  const { error, isLoading } = useAuth().state;\r\n\r\n  const handleLogin = (data) => {\r\n    login(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <form title=\"loginForm\">\r\n        <Stack maxWidth={1200} margin=\"auto\" spacing={5} marginTop={5}>\r\n          <FormControl\r\n            isInvalid={!!errors?.email?.message}\r\n            errortext={errors?.email?.message}\r\n          >\r\n            <FormLabel htmlFor=\"email\">Email Address</FormLabel>\r\n            <Input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              aria-describedby=\"email-helper-text\"\r\n              ref={register}\r\n            />\r\n            <FormErrorMessage>{errors.email?.message}</FormErrorMessage>\r\n            <FormHelperText id=\"email-helper-text\">\r\n              Enter your email\r\n            </FormHelperText>\r\n          </FormControl>\r\n          <FormControl\r\n            isInvalid={!!errors?.password?.message}\r\n            errortext={errors?.password?.message}\r\n          >\r\n            <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n            <InputGroup>\r\n              <Input\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                aria-describedby=\"password-helper-text\"\r\n                autoComplete=\"off\"\r\n                ref={register}\r\n              />\r\n              <InputRightElement>\r\n                <IconButton\r\n                  aria-label=\"show password\"\r\n                  h=\"1.75rem\"\r\n                  size=\"sm\"\r\n                  mr=\"1rem\"\r\n                  onClick={() => {\r\n                    setShowPassword(!showPassword);\r\n                  }}\r\n                  icon={showPassword ? <ViewOffIcon /> : <ViewIcon />}\r\n                />\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            <FormErrorMessage>{errors.password?.message}</FormErrorMessage>\r\n            <FormHelperText id=\"password-helper-text\">\r\n              Enter your password\r\n            </FormHelperText>\r\n          </FormControl>\r\n          <FormControl\r\n            isInvalid={!!error?.message}\r\n            errortext={error?.message}\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            flexDirection=\"column\"\r\n          >\r\n            <Button\r\n              type=\"submit\"\r\n              isLoading={isLoading}\r\n              onClick={handleSubmit(handleLogin)}\r\n              colorScheme=\"orange\"\r\n              w=\"100%\"\r\n              disabled={\r\n                !!errors.email ||\r\n                !!errors.password ||\r\n                errors.confirmPassword ||\r\n                isLoading === true\r\n              }\r\n            >\r\n              Login\r\n            </Button>\r\n            <FormErrorMessage>{error?.message}</FormErrorMessage>\r\n          </FormControl>\r\n        </Stack>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\auth\\RegisterForm.jsx",["175"],"import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport userSchema from \"../../schemas/userSchema\";\r\n\r\nimport {\r\n  Stack,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  FormHelperText,\r\n  FormErrorMessage,\r\n  IconButton,\r\n} from \"@chakra-ui/react\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\r\n\r\nexport default function RegisterForm() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const { register: registerUser, setError } = useAuth();\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(userSchema),\r\n  });\r\n\r\n  const { error, isLoading } = useAuth().state;\r\n\r\n  const handleRegister = (data) => {\r\n    registerUser(data);\r\n  };\r\n\r\n  // при первом рендере надо сбросить прошлую ошибку error(когда переключаемся с другой страницы)\r\n\r\n  useEffect(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <Stack\r\n          maxWidth={1200}\r\n          margin=\"auto\"\r\n          spacing={5}\r\n          marginTop={5}\r\n          textAlign=\"left\"\r\n        >\r\n          <FormControl\r\n            isInvalid={!!errors?.email?.message}\r\n            errortext={errors?.email?.message}\r\n          >\r\n            <FormLabel htmlFor=\"email\">Email Address</FormLabel>\r\n            <Input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              aria-describedby=\"email-helper-text\"\r\n              ref={register}\r\n            />\r\n            <FormErrorMessage>{errors.email?.message}</FormErrorMessage>\r\n            <FormHelperText id=\"email-helper-text\">Your email</FormHelperText>\r\n          </FormControl>\r\n          <FormControl\r\n            isInvalid={!!errors?.password?.message}\r\n            errortext={errors?.password?.message}\r\n          >\r\n            <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n            <InputGroup>\r\n              <Input\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                aria-describedby=\"password-helper-text\"\r\n                autoComplete=\"off\"\r\n                ref={register}\r\n              />\r\n              <InputRightElement>\r\n                <IconButton\r\n                  aria-label=\"show password\"\r\n                  h=\"1.75rem\"\r\n                  size=\"sm\"\r\n                  mr=\"1rem\"\r\n                  onClick={() => {\r\n                    setShowPassword(!showPassword);\r\n                  }}\r\n                  icon={showPassword ? <ViewOffIcon /> : <ViewIcon />}\r\n                />\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            <FormErrorMessage>{errors.password?.message}</FormErrorMessage>\r\n            <FormHelperText id=\"password-helper-text\">\r\n              Your password\r\n            </FormHelperText>\r\n          </FormControl>\r\n          <FormControl\r\n            isInvalid={!!errors?.confirmPassword}\r\n            errortext={errors?.confirmPassword && \"Passwords should match\"}\r\n          >\r\n            <FormLabel htmlFor=\"confirmPassword\">Confirm Password</FormLabel>\r\n            <Input\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              aria-describedby=\"confirmPassword-helper-text\"\r\n              autoComplete=\"off\"\r\n              ref={register}\r\n            />\r\n            <FormErrorMessage>\r\n              {errors.confirmPassword && \"Passwords should match\"}\r\n            </FormErrorMessage>\r\n          </FormControl>\r\n\r\n          <FormControl\r\n            isInvalid={!!error?.message}\r\n            errortext={error?.message}\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            flexDirection=\"column\"\r\n          >\r\n            <Button\r\n              type=\"submit\"\r\n              isLoading={isLoading}\r\n              onClick={handleSubmit(handleRegister)}\r\n              colorScheme=\"orange\"\r\n              w=\"100%\"\r\n              disabled={\r\n                !!errors.email ||\r\n                !!errors.password ||\r\n                errors.confirmPassword ||\r\n                isLoading === true\r\n              }\r\n            >\r\n              Register\r\n            </Button>\r\n            <FormErrorMessage>{error?.message}</FormErrorMessage>\r\n          </FormControl>\r\n        </Stack>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\user\\dev\\epic-note\\client\\src\\api\\userApi.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":21,"column":6,"nodeType":"182","endLine":21,"endColumn":8,"suggestions":"183"},{"ruleId":"180","severity":1,"message":"184","line":38,"column":6,"nodeType":"182","endLine":38,"endColumn":26,"suggestions":"185"},{"ruleId":"180","severity":1,"message":"186","line":96,"column":39,"nodeType":"187","endLine":96,"endColumn":50},{"ruleId":"180","severity":1,"message":"188","line":12,"column":6,"nodeType":"187","endLine":12,"endColumn":18},{"ruleId":"180","severity":1,"message":"189","line":12,"column":6,"nodeType":"187","endLine":12,"endColumn":18,"suggestions":"190"},{"ruleId":"180","severity":1,"message":"191","line":28,"column":6,"nodeType":"182","endLine":28,"endColumn":8,"suggestions":"192"},{"ruleId":"180","severity":1,"message":"193","line":18,"column":6,"nodeType":"182","endLine":18,"endColumn":8,"suggestions":"194"},{"ruleId":"180","severity":1,"message":"195","line":30,"column":6,"nodeType":"182","endLine":30,"endColumn":12,"suggestions":"196"},{"ruleId":"180","severity":1,"message":"197","line":16,"column":6,"nodeType":"182","endLine":16,"endColumn":8,"suggestions":"198"},{"ruleId":"180","severity":1,"message":"199","line":86,"column":5,"nodeType":"182","endLine":86,"endColumn":27,"suggestions":"200"},{"ruleId":"180","severity":1,"message":"201","line":39,"column":6,"nodeType":"182","endLine":39,"endColumn":8,"suggestions":"202"},{"ruleId":"180","severity":1,"message":"201","line":41,"column":6,"nodeType":"182","endLine":41,"endColumn":8,"suggestions":"203"},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshToken'. Either include it or remove the dependency array.","ArrayExpression",["206"],"React Hook useEffect has missing dependencies: 'pageId' and 'updatePageOnServer'. Either include them or remove the dependency array.",["207"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'effect'. Either include it or remove the dependency array. If 'effect' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["208"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["209"],"React Hook useEffect has a missing dependency: 'html'. Either include it or remove the dependency array. If 'setLiChecked' needs the current value of 'html', you can also switch to useReducer instead of useState and read 'html' in the reducer.",["210"],"React Hook useEffect has missing dependencies: 'children.props.innerRef', 'getLiCheckedArray', and 'prevLiCount'. Either include them or remove the dependency array.",["211"],"React Hook useEffect has a missing dependency: 'getFirstLiText'. Either include it or remove the dependency array.",["212"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["213"],"React Hook useEffect has a missing dependency: 'setError'. Either include it or remove the dependency array.",["214"],["215"],"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"232","fix":"234"},"Update the dependencies array to be: [refreshToken]",{"range":"235","text":"236"},"Update the dependencies array to be: [blocks, pageId, prevBlocks, updatePageOnServer]",{"range":"237","text":"238"},"Update the dependencies array to be: [effect]",{"range":"239","text":"240"},"Update the dependencies array to be: [history]",{"range":"241","text":"242"},"Update the dependencies array to be: [html]",{"range":"243","text":"244"},"Update the dependencies array to be: [children.props.innerRef, getLiCheckedArray, html, prevLiCount]",{"range":"245","text":"246"},"Update the dependencies array to be: [getFirstLiText]",{"range":"247","text":"248"},"Update the dependencies array to be: [accessToken, history, refetch]",{"range":"249","text":"250"},"Update the dependencies array to be: [setError]",{"range":"251","text":"252"},{"range":"253","text":"252"},[750,752],"[refreshToken]",[1637,1657],"[blocks, pageId, prevBlocks, updatePageOnServer]",[269,281],"[effect]",[935,937],"[history]",[594,596],"[html]",[1057,1063],"[children.props.innerRef, getLiCheckedArray, html, prevLiCount]",[559,561],"[getFirstLiText]",[2617,2639],"[accessToken, history, refetch]",[943,945],"[setError]",[1074,1076]]