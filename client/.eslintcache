[{"C:\\Users\\user\\dev\\epic-note\\client\\src\\context\\AppProviders.js":"1","C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\login\\LoginPage.jsx":"2","C:\\Users\\user\\dev\\epic-note\\client\\src\\App.js":"3","C:\\Users\\user\\dev\\epic-note\\client\\src\\PrivateApp.js":"4","C:\\Users\\user\\dev\\epic-note\\client\\src\\schemas\\userSchema.js":"5","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\selectMenu\\SelectMenu.jsx":"6","C:\\Users\\user\\dev\\epic-note\\client\\src\\PublicApp.js":"7","C:\\Users\\user\\dev\\epic-note\\client\\src\\context\\AuthContext.js":"8","C:\\Users\\user\\dev\\epic-note\\client\\src\\reportWebVitals.js":"9","C:\\Users\\user\\dev\\epic-note\\client\\src\\api\\notesApi.js":"10","C:\\Users\\user\\dev\\epic-note\\client\\src\\helpers\\getCaretCoordinates.js":"11","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\editableBlock\\EditableBlock.jsx":"12","C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\blockEditor\\BlockEditor.jsx":"13","C:\\Users\\user\\dev\\epic-note\\client\\src\\helpers\\setCaretToEnd.js":"14","C:\\Users\\user\\dev\\epic-note\\client\\src\\routes\\privateRoutes.js":"15","C:\\Users\\user\\dev\\epic-note\\client\\src\\index.js":"16","C:\\Users\\user\\dev\\epic-note\\client\\src\\hooks\\useComponentDidUpdate.js":"17","C:\\Users\\user\\dev\\epic-note\\client\\src\\context\\actions.js":"18","C:\\Users\\user\\dev\\epic-note\\client\\src\\routes\\publicRoutes.js":"19","C:\\Users\\user\\dev\\epic-note\\client\\src\\api\\authApi.js":"20","C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\register\\RegisterPage.jsx":"21","C:\\Users\\user\\dev\\epic-note\\client\\src\\helpers\\objectId.js":"22","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\ButtonBlock.jsx":"23","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\FolderTree.jsx":"24","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\PageItem.jsx":"25","C:\\Users\\user\\dev\\epic-note\\client\\src\\hooks\\usePrevious.js":"26","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\actionMenu\\ActionMenu.jsx":"27","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\ToggleList.jsx":"28","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\TodoList.jsx":"29","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\AddPageModal.jsx":"30","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\PlaceholderSplash.jsx":"31","C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\Notes.jsx":"32","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\CustomLink.jsx":"33","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\RegisterForm.jsx":"34","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\LoginForm.jsx":"35","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\SideBar.jsx":"36","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\Placeholder.jsx":"37"},{"size":237,"mtime":1634563914677,"results":"38","hashOfConfig":"39"},{"size":554,"mtime":1634563327574,"results":"40","hashOfConfig":"39"},{"size":1909,"mtime":1634563914650,"results":"41","hashOfConfig":"39"},{"size":301,"mtime":1634563914651,"results":"42","hashOfConfig":"39"},{"size":263,"mtime":1634563914701,"results":"43","hashOfConfig":"39"},{"size":3822,"mtime":1634563327546,"results":"44","hashOfConfig":"39"},{"size":514,"mtime":1634563914653,"results":"45","hashOfConfig":"39"},{"size":3091,"mtime":1634563914679,"results":"46","hashOfConfig":"39"},{"size":362,"mtime":1634563914696,"results":"47","hashOfConfig":"39"},{"size":2034,"mtime":1634563914656,"results":"48","hashOfConfig":"39"},{"size":350,"mtime":1634563914682,"results":"49","hashOfConfig":"39"},{"size":18565,"mtime":1634816050634,"results":"50","hashOfConfig":"39"},{"size":6971,"mtime":1634735712906,"results":"51","hashOfConfig":"39"},{"size":271,"mtime":1634563914685,"results":"52","hashOfConfig":"39"},{"size":500,"mtime":1634563914698,"results":"53","hashOfConfig":"39"},{"size":383,"mtime":1634563914693,"results":"54","hashOfConfig":"39"},{"size":287,"mtime":1634563914687,"results":"55","hashOfConfig":"39"},{"size":788,"mtime":1634563914680,"results":"56","hashOfConfig":"39"},{"size":944,"mtime":1634563914699,"results":"57","hashOfConfig":"39"},{"size":2256,"mtime":1634563914654,"results":"58","hashOfConfig":"39"},{"size":559,"mtime":1634563327576,"results":"59","hashOfConfig":"39"},{"size":302,"mtime":1634563914683,"results":"60","hashOfConfig":"39"},{"size":397,"mtime":1634563914659,"results":"61","hashOfConfig":"39"},{"size":4924,"mtime":1634563914662,"results":"62","hashOfConfig":"39"},{"size":1892,"mtime":1634563914667,"results":"63","hashOfConfig":"39"},{"size":206,"mtime":1634569235711,"results":"64","hashOfConfig":"39"},{"size":1019,"mtime":1634563327539,"results":"65","hashOfConfig":"39"},{"size":1149,"mtime":1634563914676,"results":"66","hashOfConfig":"39"},{"size":2193,"mtime":1634563914674,"results":"67","hashOfConfig":"39"},{"size":2275,"mtime":1634563914658,"results":"68","hashOfConfig":"39"},{"size":524,"mtime":1634563914670,"results":"69","hashOfConfig":"39"},{"size":1674,"mtime":1634816088735,"results":"70","hashOfConfig":"39"},{"size":318,"mtime":1634563914661,"results":"71","hashOfConfig":"39"},{"size":3635,"mtime":1634563914671,"results":"72","hashOfConfig":"39"},{"size":3924,"mtime":1634563914664,"results":"73","hashOfConfig":"39"},{"size":5486,"mtime":1634563914673,"results":"74","hashOfConfig":"39"},{"size":471,"mtime":1634563914668,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1hr0hu3",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Users\\user\\dev\\epic-note\\client\\src\\context\\AppProviders.js",[],["157","158"],"C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\login\\LoginPage.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\App.js",["159","160","161"],"import { useEffect, useState } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport PrivateApp from \"./PrivateApp\";\nimport PublicApp from \"./PublicApp\";\nimport { useAuth } from \"./context/AuthContext\";\nimport { useComponentDidUpdate } from \"./hooks/useComponentDidUpdate\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport PlaceholderSplash from \"./components/PlaceholderSplash\";\n\nfunction App() {\n  const { refreshToken, logout } = useAuth();\n  const { isAuth, expiryDate, isRefreshing, isLoading } = useAuth().state;\n  const [timer, setTimer] = useState(null);\n\n  const queryClient = new QueryClient();\n\n  // попытка логина с refresh-token\n  useEffect(() => {\n    refreshToken();\n  }, []);\n\n  // останавливаем/запускаем таймер, когда обновился expiryDate\n  useComponentDidUpdate(() => {\n    if (expiryDate) startRefreshTask();\n    else if (timer && !expiryDate) stopRefreshTask();\n  }, [expiryDate]);\n\n  // функция для запуска таймера на обновление токенов\n  const startRefreshTask = () => {\n    const curTime = Date.now();\n    const timeToCheckRefresh = expiryDate * 1000 - curTime;\n    const timer = setTimeout(() => {\n      refreshToken();\n    }, timeToCheckRefresh);\n    setTimer(timer);\n  };\n\n  // функция для остановки таймера\n  const stopRefreshTask = () => {\n    if (timer) {\n      clearTimeout(timer);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Is refreshing: \" + isRefreshing);\n  }, [isRefreshing]);\n\n  useEffect(() => {\n    console.log(\"Is loading: \" + isLoading);\n  }, [isLoading]);\n  return (\n    <div>\n      <QueryClientProvider client={queryClient}>\n        <ChakraProvider>\n          {isAuth ? <PrivateApp /> : <PublicApp />}\n        </ChakraProvider>\n      </QueryClientProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\dev\\epic-note\\client\\src\\PrivateApp.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\schemas\\userSchema.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\selectMenu\\SelectMenu.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\PublicApp.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\api\\notesApi.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\helpers\\getCaretCoordinates.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\editableBlock\\EditableBlock.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\blockEditor\\BlockEditor.jsx",["162","163","164"],"import React, { useEffect, useState } from \"react\";\r\n// @ts-ignore\r\nimport styles from \"./blockEditor.module.scss\";\r\nimport EditableBlock from \"../../components/editableBlock/EditableBlock\";\r\nimport { setCaretToEnd } from \"../../helpers/setCaretToEnd\";\r\nimport usePrevious from \"../../hooks/usePrevious\";\r\nimport * as notesApi from \"../../api/notesApi\";\r\nimport objectId from \"../../helpers/objectId\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { useCallback } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nconst BlockEditor = ({ pageId, accessToken, fetchedBlocks }) => {\r\n  const [blocks, setBlocks] = useState(fetchedBlocks);\r\n  const [currentBlockId, setCurrentBlockId] = useState(null);\r\n  const prevBlocks = usePrevious(blocks);\r\n  // используется, чтобы предотвратить отправку новых блоков на сервер, когда мы меняем страницу.\r\n  // ресетается обратно на true, когда сменяется страница (приходят новые fetchedBlocks)\r\n  // присваивается значение false, когда происходит какое-то действие с блоками\r\n  const isFirstRenderWithPage = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (fetchedBlocks.length === 0) console.log(\"array length is 0\");\r\n    setBlocks(fetchedBlocks);\r\n    setCurrentBlockId(null);\r\n    isFirstRenderWithPage.current = true;\r\n  }, [fetchedBlocks]);\r\n\r\n  const updatePageOnServer = async (blocks) => {\r\n    notesApi.updatePage(accessToken, pageId, blocks);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isFirstRenderWithPage.current && prevBlocks && prevBlocks !== blocks) {\r\n      console.log(\r\n        \"UPDATING SERVER WITH BLOCKS: \",\r\n        blocks,\r\n        isFirstRenderWithPage.current\r\n      );\r\n      updatePageOnServer({ blocks: blocks });\r\n    }\r\n  }, [blocks, prevBlocks]);\r\n\r\n  // Handling the cursor and focus on adding and deleting blocks\r\n  useEffect(() => {\r\n    // If a new block was added, move the caret to it\r\n    if (prevBlocks && prevBlocks.length + 1 === blocks.length) {\r\n      const nextBlockPosition =\r\n        blocks.map((b) => b._id).indexOf(currentBlockId) + 1 + 1;\r\n      const nextBlock = document.querySelector(\r\n        `[data-position=\"${nextBlockPosition}\"]`\r\n      );\r\n      if (nextBlock) {\r\n        nextBlock.focus();\r\n      }\r\n    }\r\n    // If a block was deleted, move the caret to the end of the last block\r\n    if (prevBlocks && prevBlocks.length - 1 === blocks.length) {\r\n      const lastBlockPosition = prevBlocks\r\n        .map((b) => b._id)\r\n        .indexOf(currentBlockId);\r\n      const lastBlock = document.querySelector(\r\n        `[data-position=\"${lastBlockPosition}\"]`\r\n      );\r\n      if (lastBlock) {\r\n        console.log(\"IN LAST BLOCK\");\r\n        setCaretToEnd(lastBlock);\r\n      }\r\n    }\r\n  }, [blocks, prevBlocks, currentBlockId]);\r\n\r\n  // Здесь мы обновляем общий стейт с блоками, а это в свою очередь триггерит useEffect на blocks и prevBlocks, в этом юз эффекте нам и нужно посылать запросы с обновлениями на сервер.\r\n  const updateBlockHandler = useCallback(\r\n    (currentBlock) => {\r\n      console.log(\"in update block handler\");\r\n      isFirstRenderWithPage.current = false;\r\n      const index = blocks.map((b) => b._id).indexOf(currentBlock.id);\r\n      const oldBlock = blocks[index];\r\n      const updatedBlocks = [...blocks];\r\n\r\n      updatedBlocks[index] = {\r\n        ...updatedBlocks[index],\r\n        tag: currentBlock.tag,\r\n        html: currentBlock.html,\r\n        counter: currentBlock.counter,\r\n      };\r\n      setBlocks(updatedBlocks);\r\n    },\r\n    [blocks]\r\n  );\r\n\r\n  const addBlockHandler = useCallback(\r\n    (currentBlock) => {\r\n      isFirstRenderWithPage.current = false;\r\n      setCurrentBlockId(currentBlock.id);\r\n      const index = blocks.map((b) => b._id).indexOf(currentBlock.id);\r\n      const updatedBlocks = [...blocks];\r\n      const newBlock = { _id: objectId(), tag: \"p\", html: \"\" };\r\n      updatedBlocks.splice(index + 1, 0, newBlock);\r\n      // это на тот случай, когда у нас еще не произошло обновление текущего блока через updateBlock (когда пользователь не закончил печатать и нажал enter)\r\n      updatedBlocks[index] = {\r\n        ...updatedBlocks[index],\r\n        tag: currentBlock.tag,\r\n        html: currentBlock.html,\r\n      };\r\n      setBlocks(updatedBlocks);\r\n    },\r\n    [blocks]\r\n  );\r\n\r\n  const deleteBlockHandler = useCallback(\r\n    (currentBlock) => {\r\n      isFirstRenderWithPage.current = false;\r\n      if (blocks.length > 1) {\r\n        setCurrentBlockId(currentBlock.id);\r\n        const index = blocks.map((b) => b._id).indexOf(currentBlock.id);\r\n        const deletedBlock = blocks[index];\r\n        const updatedBlocks = [...blocks];\r\n        updatedBlocks.splice(index, 1);\r\n        setBlocks(updatedBlocks);\r\n      }\r\n    },\r\n    [blocks]\r\n  );\r\n\r\n  const onDragEndHandler = useCallback(\r\n    (result) => {\r\n      isFirstRenderWithPage.current = false;\r\n      const { destination, source } = result;\r\n\r\n      // If we don't have a destination (due to dropping outside the droppable)\r\n      // or the destination hasn't changed, we change nothing\r\n      if (!destination || destination.index === source.index) {\r\n        return;\r\n      }\r\n\r\n      const updatedBlocks = [...blocks];\r\n      const removedBlocks = updatedBlocks.splice(source.index - 1, 1);\r\n      updatedBlocks.splice(destination.index - 1, 0, removedBlocks[0]);\r\n      setBlocks(updatedBlocks);\r\n      console.log(destination, source);\r\n    },\r\n    [blocks]\r\n  );\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEndHandler}>\r\n      <div className={styles.editor}>\r\n        <Droppable droppableId={pageId}>\r\n          {(provided) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n              className={styles.droppable}\r\n            >\r\n              {blocks.map((block) => {\r\n                const position =\r\n                  blocks.map((b) => b._id).indexOf(block._id) + 1;\r\n                return (\r\n                  <EditableBlock\r\n                    key={block._id}\r\n                    position={position}\r\n                    id={block._id}\r\n                    tag={block.tag}\r\n                    html={block.html}\r\n                    addBlock={addBlockHandler}\r\n                    deleteBlock={deleteBlockHandler}\r\n                    updatePage={updateBlockHandler}\r\n                    counter={block.counter}\r\n                  />\r\n                );\r\n              })}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default BlockEditor;\r\n","C:\\Users\\user\\dev\\epic-note\\client\\src\\helpers\\setCaretToEnd.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\routes\\privateRoutes.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\index.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\hooks\\useComponentDidUpdate.js",["165","166"],"import { useRef, useEffect } from \"react\";\n\nexport const useComponentDidUpdate = (effect, dependencies) => {\n  const hasMounted = useRef(false);\n\n  useEffect(() => {\n    if (!hasMounted.current) {\n      hasMounted.current = true;\n      return;\n    }\n    effect();\n  }, dependencies);\n};\n","C:\\Users\\user\\dev\\epic-note\\client\\src\\context\\actions.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\routes\\publicRoutes.js",["167"],"import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport App from \"../App\";\nimport LoginPage from \"../pages/login/LoginPage\";\nimport RegisterPage from \"../pages/register/RegisterPage\";\n\n// Todo: здесь нужно будет редиректить пользователя, если он не залогинен.\n// Todo: Добавить страницу showcase, которая будет показываться в первый раз незалогиненным пользователям\n\nlet publicRoutes = (\n  <Switch>\n    <Route\n      exact\n      path=\"/\"\n      render={() => <Redirect to={{ pathname: \"/login\" }} />}\n      key=\"home\"\n    />\n    ,\n    <Route path=\"/login\" component={LoginPage} key=\"login\" />,\n    <Route path=\"/register\" component={RegisterPage} key=\"register\" />,\n    <Route render={() => <Redirect to={{ pathname: \"/\" }} />} />\n  </Switch>\n);\n\nexport default publicRoutes;\n","C:\\Users\\user\\dev\\epic-note\\client\\src\\api\\authApi.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\register\\RegisterPage.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\helpers\\objectId.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\ButtonBlock.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\FolderTree.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\PageItem.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\hooks\\usePrevious.js",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\actionMenu\\ActionMenu.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\ToggleList.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\TodoList.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\AddPageModal.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\PlaceholderSplash.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\pages\\Notes.jsx",["168"],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\CustomLink.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\RegisterForm.jsx",[],"C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\LoginForm.jsx",["169","170","171","172"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport userSchema from \"../schemas/userSchema\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Stack,\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  FormHelperText,\r\n  FormErrorMessage,\r\n} from \"@chakra-ui/react\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\n// Todo: скорее всего нужно объединить это с registerForm в один файл\r\n\r\nexport default function LoginForm() {\r\n  const history = useHistory();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(userSchema),\r\n  });\r\n\r\n  const { login } = useAuth();\r\n\r\n  const { isAuth, error, isLoading } = useAuth().state;\r\n\r\n  const handleLogin = (data) => {\r\n    console.log(data);\r\n    login(data);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"redirecting\" + isAuth);\r\n  //   if (isAuth) history.push(\"/\");\r\n  // }, [isAuth]);\r\n\r\n  return (\r\n    <>\r\n      <form title=\"loginForm\">\r\n        <Stack maxWidth={1200} margin=\"auto\" spacing={5} marginTop={5}>\r\n          <FormControl\r\n            isInvalid={!!errors?.email?.message}\r\n            errortext={errors?.email?.message}\r\n          >\r\n            <FormLabel htmlFor=\"email\">Email Address</FormLabel>\r\n            <Input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              aria-describedby=\"email-helper-text\"\r\n              ref={register}\r\n            />\r\n            <FormErrorMessage>{errors.email?.message}</FormErrorMessage>\r\n            <FormHelperText id=\"email-helper-text\">\r\n              Enter your email\r\n            </FormHelperText>\r\n          </FormControl>\r\n          <FormControl\r\n            isInvalid={!!errors?.password?.message}\r\n            errortext={errors?.password?.message}\r\n          >\r\n            <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n            <InputGroup>\r\n              <Input\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                aria-describedby=\"password-helper-text\"\r\n                autoComplete=\"off\"\r\n                ref={register}\r\n              />\r\n              <InputRightElement>\r\n                <Button\r\n                  h=\"1.75rem\"\r\n                  size=\"sm\"\r\n                  mr=\"1rem\"\r\n                  onClick={() => {\r\n                    setShowPassword(!showPassword);\r\n                  }}\r\n                >\r\n                  {showPassword ? \"Hide\" : \"Show\"}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            <FormErrorMessage>{errors.password?.message}</FormErrorMessage>\r\n            <FormHelperText id=\"password-helper-text\">\r\n              Enter your password\r\n            </FormHelperText>\r\n          </FormControl>\r\n          <FormControl\r\n            isInvalid={!!error?.message}\r\n            errortext={error?.message}\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            flexDirection=\"column\"\r\n          >\r\n            <Button\r\n              type=\"submit\"\r\n              isLoading={isLoading}\r\n              onClick={handleSubmit(handleLogin)}\r\n              colorScheme=\"orange\"\r\n              w=\"100%\"\r\n              disabled={\r\n                !!errors.email ||\r\n                !!errors.password ||\r\n                errors.confirmPassword ||\r\n                isLoading === true\r\n              }\r\n            >\r\n              Login\r\n            </Button>\r\n            <FormErrorMessage>{error?.message}</FormErrorMessage>\r\n          </FormControl>\r\n        </Stack>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\SideBar.jsx",["173","174"],"import { Button } from '@chakra-ui/button';\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Heading,\r\n  Slide,\r\n  useDisclosure,\r\n  VStack,\r\n  Spinner,\r\n} from '@chakra-ui/react';\r\nimport React, { useState } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport * as notesApi from '../api/notesApi';\r\nimport { useQuery } from 'react-query';\r\nimport { useHistory } from 'react-router';\r\nimport { AddIcon, ArrowLeftIcon, ArrowRightIcon } from '@chakra-ui/icons';\r\nimport objectId from '../helpers/objectId';\r\nimport FolderTree from './FolderTree';\r\nimport AddPageModal from './AddPageModal';\r\n\r\nexport default function SideBar({ pageId }) {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [deletingId, setDeletingId] = useState(null);\r\n  const { isOpen, onToggle } = useDisclosure();\r\n  const { logout } = useAuth();\r\n  const { accessToken } = useAuth().state;\r\n  const history = useHistory();\r\n\r\n  // react-query\r\n  const { data, error, isLoading, isError, refetch } = useQuery(\r\n    'pages',\r\n    async () => {\r\n      return await notesApi.getPages(accessToken);\r\n    }\r\n  );\r\n\r\n  const btnRef = React.useRef();\r\n  const position = isOpen ? 'sticky' : 'fixed';\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n  };\r\n\r\n  const handlePageClick = (pageId) => {\r\n    history.push(`/${pageId}`);\r\n  };\r\n\r\n  // console.log(\"data: \" + JSON.stringify(data));\r\n  // if (!isLoading) {\r\n  //   console.log(data.pages);\r\n  // }\r\n\r\n  const handleModalClose = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleModalOpen = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleModalSaveClick = async ({ pageTitle }) => {\r\n    // add page запрос на сервер\r\n    console.log('in handle add page');\r\n    setIsFetching(true);\r\n    const initialBlock = { _id: objectId(), tag: 'p', html: '' };\r\n    await notesApi.addPage(accessToken, pageTitle, initialBlock);\r\n    setIsFetching(false);\r\n    setIsModalOpen(false);\r\n    refetch();\r\n  };\r\n\r\n  const handlePageDelete = async (pageId) => {\r\n    // delete page запрос на сервер\r\n    setIsDeleting(true);\r\n    setDeletingId(pageId);\r\n    // console.log(\"handlePageDelete, id: \" + pageId);\r\n    await notesApi.deletePage(accessToken, pageId);\r\n    setIsDeleting(false);\r\n    setDeletingId(null);\r\n    refetch();\r\n    console.log('in delete page');\r\n  };\r\n\r\n  // здесь мы просто наверное будем отсылать запрос на обновление страниц, на клиенте обновление уже произойдет в дереве, хотя хз\r\n  const handleUpdatePages = async (newTree) => {\r\n    console.log('in update pages');\r\n    notesApi.updatePages(accessToken, newTree);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: 'fixed', left: '5px', top: '5px', zIndex: 100 }}>\r\n        <Button ref={btnRef} chcolorSeme=\"orange\" onClick={onToggle}>\r\n          Pages <ArrowRightIcon ml=\"10px\" />\r\n        </Button>\r\n      </div>\r\n      <Slide\r\n        direction=\"left\"\r\n        in={isOpen}\r\n        style={{\r\n          height: '100vh',\r\n          width: '300px',\r\n          zIndex: 100,\r\n          position: position,\r\n        }}\r\n      >\r\n        <VStack\r\n          color=\"black\"\r\n          bg=\"#F7F6F3\"\r\n          rounded=\"md\"\r\n          h=\"100vh\"\r\n          w=\"300px\"\r\n          overflowY=\"scroll\"\r\n          overflowX=\"hidden\"\r\n        >\r\n          <Box p={2.5} mr=\"5px\" ml=\"5px\" w=\"100%\" position=\"relative\">\r\n            <Flex justifyContent=\"space-between\">\r\n              <Heading fontSize={28}>User Pages </Heading>\r\n              <Button\r\n                aria-label=\"Close Control Panel\"\r\n                onClick={handleLogout}\r\n                colorScheme=\"orange\"\r\n              >\r\n                Logout\r\n              </Button>\r\n              <Button\r\n                aria-label=\"Close Control Panel\"\r\n                onClick={onToggle}\r\n                colorScheme=\"orange\"\r\n                ml=\"5px\"\r\n              >\r\n                Close\r\n                <ArrowLeftIcon ml=\"10px\" />\r\n              </Button>\r\n            </Flex>\r\n          </Box>\r\n          {isLoading ? (\r\n            <Spinner />\r\n          ) : (\r\n            <FolderTree\r\n              handlePageClick={handlePageClick}\r\n              handlePageDelete={handlePageDelete}\r\n              pageId={pageId}\r\n              isDeleting={isDeleting}\r\n              deletingId={deletingId}\r\n              handleUpdatePages={handleUpdatePages}\r\n              pagesData={data.pages}\r\n            />\r\n          )}\r\n\r\n          <AddPageModal\r\n            isOpen={isModalOpen}\r\n            onClose={handleModalClose}\r\n            onSave={handleModalSaveClick}\r\n            isLoading={isFetching}\r\n          />\r\n\r\n          <Box\r\n            onClick={handleModalOpen}\r\n            p={2}\r\n            borderWidth=\"1px\"\r\n            m=\"5px\"\r\n            w=\"100%\"\r\n            _hover={{ bg: '#E8E6E1', cursor: 'pointer' }}\r\n            style={{ transition: '.2s ease-in-out' }}\r\n            position=\"fixed\"\r\n            bottom=\"0px\"\r\n            left=\"0px\"\r\n            h=\"65px\"\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n          >\r\n            <AddIcon />\r\n            <Heading fontSize=\"xl\" ml=\"15px\" overflow=\"hidden\">\r\n              New page\r\n            </Heading>\r\n          </Box>\r\n        </VStack>\r\n      </Slide>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\user\\dev\\epic-note\\client\\src\\components\\Placeholder.jsx",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":8,"column":8,"nodeType":"181","messageId":"182","endLine":8,"endColumn":25},{"ruleId":"179","severity":1,"message":"183","line":11,"column":25,"nodeType":"181","messageId":"182","endLine":11,"endColumn":31},{"ruleId":"184","severity":1,"message":"185","line":20,"column":6,"nodeType":"186","endLine":20,"endColumn":8,"suggestions":"187"},{"ruleId":"184","severity":1,"message":"188","line":42,"column":6,"nodeType":"186","endLine":42,"endColumn":26,"suggestions":"189"},{"ruleId":"179","severity":1,"message":"190","line":78,"column":13,"nodeType":"181","messageId":"182","endLine":78,"endColumn":21},{"ruleId":"179","severity":1,"message":"191","line":117,"column":15,"nodeType":"181","messageId":"182","endLine":117,"endColumn":27},{"ruleId":"184","severity":1,"message":"192","line":12,"column":6,"nodeType":"181","endLine":12,"endColumn":18},{"ruleId":"184","severity":1,"message":"193","line":12,"column":6,"nodeType":"181","endLine":12,"endColumn":18,"suggestions":"194"},{"ruleId":"179","severity":1,"message":"195","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":11},{"ruleId":"184","severity":1,"message":"196","line":27,"column":6,"nodeType":"186","endLine":27,"endColumn":8,"suggestions":"197"},{"ruleId":"179","severity":1,"message":"198","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"199","line":7,"column":10,"nodeType":"181","messageId":"182","endLine":7,"endColumn":14},{"ruleId":"179","severity":1,"message":"200","line":25,"column":9,"nodeType":"181","messageId":"182","endLine":25,"endColumn":16},{"ruleId":"179","severity":1,"message":"201","line":35,"column":11,"nodeType":"181","messageId":"182","endLine":35,"endColumn":17},{"ruleId":"179","severity":1,"message":"202","line":32,"column":17,"nodeType":"181","messageId":"182","endLine":32,"endColumn":22},{"ruleId":"179","severity":1,"message":"203","line":32,"column":35,"nodeType":"181","messageId":"182","endLine":32,"endColumn":42},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'PlaceholderSplash' is defined but never used.","Identifier","unusedVar","'logout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshToken'. Either include it or remove the dependency array.","ArrayExpression",["206"],"React Hook useEffect has a missing dependency: 'updatePageOnServer'. Either include it or remove the dependency array.",["207"],"'oldBlock' is assigned a value but never used.","'deletedBlock' is assigned a value but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'effect'. Either include it or remove the dependency array. If 'effect' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["208"],"'App' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["209"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'history' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'error' is assigned a value but never used.","'isError' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [refreshToken]",{"range":"218","text":"219"},"Update the dependencies array to be: [blocks, prevBlocks, updatePageOnServer]",{"range":"220","text":"221"},"Update the dependencies array to be: [effect]",{"range":"222","text":"223"},"Update the dependencies array to be: [history]",{"range":"224","text":"225"},[727,729],"[refreshToken]",[1716,1736],"[blocks, prevBlocks, updatePageOnServer]",[269,281],"[effect]",[859,861],"[history]"]